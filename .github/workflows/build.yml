name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "21" # Ajustez selon la version de Node.js utilisée par votre projet backend

      - name: Install dependencies (Frontend)
        run: npm install
        working-directory: ./frontend

      - name: Run tests (Frontend)
        run: npm test
        working-directory: ./frontend

      - name: Generate coverage report (Frontend)
        run: npx nyc --reporter=text-lcov npm test > coverage.lcov
        working-directory: ./frontend

      - name: Install dependencies (Backend)
        run: npm install
        working-directory: ./backend

      - name: Run tests (Backend)
        run: npm test
        working-directory: ./backend

      - name: Generate coverage report (Backend)
        run: npx nyc --reporter=lcov npm test
        working-directory: ./backend

      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          # If you wish to fail your job when the Quality Gate is red, uncomment the
          # following lines. This would typically be used to fail a deployment.
          # - uses: sonarsource/sonarqube-quality-gate-action@master
          #   timeout-minutes: 5
          #   env:
          #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

        with:
          args: >

            -Dsonar.javascript.lcov.reportPaths=backend/coverage/lcov.info,frontend/coverage/lcov.info
        #Vous pouvez ajouter d'autres propriétés de configuration SonarQube ici au besoin
